<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Light.BlogApi</name>
    </assembly>
    <members>
        <member name="T:Light.BlogApi.Controllers.Single.BlogController">
            <summary>
            博客控制器
            </summary>
        </member>
        <member name="M:Light.BlogApi.Controllers.Single.BlogController.#ctor(Light.EFRespository.IUnitOfWork{Light.EFRespository.LightBlog.LightBlogContext})">
            <summary>
            构造函数
            </summary>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:Light.BlogApi.Controllers.Single.BlogController.GetAllBlog">
            <summary>
            所有博客列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Light.BlogApi.Controllers.Single.BlogController.GetAllUserByPage(Light.Model.CommonModel.PageRequest)">
            <summary>
            分页所有博客列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Light.BlogApi.Controllers.Single.BlogController.GetBlogById(System.Int32)">
            <summary>
            根据Id获取一个博客
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Light.BlogApi.Controllers.Single.BlogController.AddBlog(Light.Model.TableModel.LightBlog.Blog)">
            <summary>
            添加一个博客
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:Light.BlogApi.Controllers.Single.BlogController.UpdateBlog(Light.Model.TableModel.LightBlog.Blog)">
            <summary>
            更新一个博客
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:Light.BlogApi.Controllers.Single.BlogController.DeleteBlog(System.Int32)">
            <summary>
            删除一个博客
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Light.BlogApi.Program">
            <summary>
            入口
            </summary>
        </member>
        <member name="M:Light.BlogApi.Program.Main(System.String[])">
            <summary>
            入口方法
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Light.BlogApi.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            创建HostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Light.BlogApi.Startup">
            <summary>
            启动类
            </summary>
        </member>
        <member name="M:Light.BlogApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            启动构造函数
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Light.BlogApi.Startup.Configuration">
            <summary>
            配置信息
            </summary>
        </member>
        <member name="M:Light.BlogApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
             This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Light.BlogApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
